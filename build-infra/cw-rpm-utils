#!/bin/bash
#
# Utilities for building RPM packages
# When source-d in, the caller should pass
# $1 - the package name
# $2 - the top-level directory (i.e. the root of the repository
# $3 - the build root (provided by rpmbuild - normally rpm/BUILDROOT)
#
# Note that this script is only ever expected to be source-d into another
# script - the !/bin/bash comment above is just so that vim can do
# syntax-highlighting correctly.
#
# Copyright (C) Metaswitch Networks 2017
# If license terms are provided to you in a COPYING file in the root directory
# of the source code repository by which you are accessing this code, then
# the license outlined in that COPYING file applies to your use.
# Otherwise no rights are granted except for those provided to you by
# Metaswitch Networks in a separate written agreement.

export CW_RPM_UTILS_PACKAGE=$1
export CW_RPM_UTILS_TOPDIR=$2
export CW_RPM_UTILS_BUILDROOT=$3

# Clears out the package build root directory, and copies in the standard
# LICENSE file.
function setup_buildroot {
  rm -rf ${CW_RPM_UTILS_BUILDROOT}
  if [ -e ${CW_RPM_UTILS_TOPDIR}/COPYING ]; then
    copy_to_buildroot COPYING /usr/share/licenses/$CW_RPM_UTILS_PACKAGE LICENSE
  else
    echo_to_buildroot "Copyright: Metaswitch Networks 2017" /usr/share/licenses/$CW_RPM_UTILS_PACKAGE LICENSE
  fi
}

# Copies a single file to the package build root directory.
# $1 - source file path
# $2 - target directory
# $3 - target filename (optional)
function copy_to_buildroot {
  mkdir -p ${CW_RPM_UTILS_BUILDROOT}/$2
  cp -rp ${CW_RPM_UTILS_TOPDIR}/$1 ${CW_RPM_UTILS_BUILDROOT}/$2/$3
}

# Echoes some text to a file in the package build root directory.
# $1 - text to echo
# $2 - target directory
# $3 - target filename (optional)
function echo_to_buildroot {
  mkdir -p ${CW_RPM_UTILS_BUILDROOT}/$2
  echo $1 > ${CW_RPM_UTILS_BUILDROOT}/$2/$3
}

# Creates a symbolic link in the package build root directory.
# $1 - link destination
# $2 - link source
function link_in_buildroot {
  mkdir -p $(dirname ${CW_RPM_UTILS_BUILDROOT}/$2)
  ln -s $1 ${CW_RPM_UTILS_BUILDROOT}/$2
}

# Runs through a Debian *.install file, copying all files into the package
# build root directory.
# The *.install file should be supplied on stdin.
function install_to_buildroot {
  export -f copy_to_buildroot

  # Spin through the input line-by-line, calling copy_to_buildroot and passing
  # the first and second halves of the line as separate parameters.
  xargs -r -I {} bash -c 'copy_to_buildroot "$(cut -d\  -f 1 <<< "{}")" "$(cut -d\  -f 2 <<< "{}")"'
}

# Runs through a Debian *.links file, creating links to the target files in the
# package build root directory.
# The *.links file should be supplied on stdin.
function install_links_in_buildroot {
  export -f link_in_buildroot

  # Spin through the input line-by-line, calling link_to_buildroot and passing
  # the first and second halves of the line as separate parameters.
  xargs -r -I {} bash -c 'link_in_buildroot "$(cut -d\  -f 1 <<< "{}")" "$(cut -d\  -f 2 <<< "{}")"'
}

# Runs through a Debian *.dirs file, creating all directories within the
# package build root directory.
# The *.dirs file should be supplied on stdin.
function dirs_to_buildroot {
  xargs -r -I {} mkdir -p ${CW_RPM_UTILS_BUILDROOT}/{}
}

# Generates the list of files and directories that should be collected up into
# the final build package, maintaining permissions.
# Output is on stdout - if you need to modify it, this can be piped through
# "grep -v" to remove entries, and you can then add new entries in the %files
# section of your spec file.
function build_files_list {
  cd ${CW_RPM_UTILS_BUILDROOT}

  # Find all executable files, strip the leading "./", report their attributes
  # and mark anything below /etc as config.
  find . -type f -a -executable |
  sed -e 's/^\./%attr(755, -, -) /g' |
  sed -e 's/ \(\/etc\/\)/ %config \1/g'

  # Find all non-executable files, empty directories and links, strip the
  # leading "./", mark anything below /etc as config, mark anything below
  # /etc/init.d as executable, and mark the LICENSE file as doc.
  find . -type f -a ! -executable -o -type d -empty -o -type l |
  sed -e 's/^\.//g' |
  sed -e 's/^\(\/etc\/\)/%config \1/g' |
  sed -e 's/ \(\/etc\/init.d\/\)/ %attr(755, -, -) \1/g' |
  sed -e 's/^\(\/usr\/share\/licenses\/[^/]*\/LICENSE\)/%doc \1/g'

  cd - > /dev/null
}
